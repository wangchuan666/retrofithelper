apply plugin: 'com.android.library'
apply plugin: 'com.github.dcendents.android-maven'
android {
    compileSdkVersion 29
    buildToolsVersion "29.0.2"
    defaultConfig {
        minSdkVersion 19
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
    }

    buildTypes {
        release {
            minifyEnabled false
        }
    }

}
ext {
    retrofit_version = '2.8.1'
}
dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    /*  api "com.squareup.retrofit2:retrofit:$retrofit_version"
      api "com.squareup.retrofit2:converter-gson:$retrofit_version"
      api "com.squareup.retrofit2:adapter-rxjava2:$retrofit_version"*/
    api 'com.squareup.okhttp3:logging-interceptor:4.2.2'
    api 'io.reactivex.rxjava2:rxandroid:2.1.1'
    api files('libs/adapter-rxjava2-2.8.1.jar')
    api files('libs/converter-gson-2.8.1.jar')
    api files('libs/gson-2.8.5.jar')
    api files('libs/retrofit-2.8.1.jar')
}
task makeJar(type: Jar) {
//    delete 'build/mylib.jar'//删除旧的jar
    destinationDir = file('build/libs')//指定新jar包存放目录
    archivesBaseName = "retrofit_helper"//指定新jar包名字
    from('build/intermediates/packaged-classes/release/classes.jar')//你写的代码的来源，编译后能找到你代码的路径。因人而异，有可能是
    //第三方库的jar包存放位置
    from(project.zipTree("libs/retrofit-2.8.1.jar"))
    from(project.zipTree("libs/adapter-rxjava2-2.8.1.jar"))
    from(project.zipTree("libs/converter-gson-2.8.1.jar"))
    from(project.zipTree("libs/gson-2.8.5.jar"))
}
makeJar.dependsOn(build)

